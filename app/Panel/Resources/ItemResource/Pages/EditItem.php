<?php

namespace App\Panel\Resources\ItemResource\Pages;

use App\Database\Models\Item;
use App\Panel\Resources\ItemResource;
use Filament\Actions;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Form;
use Filament\Resources\Pages\EditRecord;
use Filament\Support\Colors\Color;
use Illuminate\Database\Eloquent\Model;

/**
 * @property Item $record
 */
class EditItem extends EditRecord
{
    protected static string $resource = ItemResource::class;

    protected function getHeaderActions(): array
    {
        return [
            //            Actions\DeleteAction::make(),
        ];
    }

    public function form(Form $form): Form
    {
        return parent::form($form); // TODO: Change the autogenerated stub
    }

    protected function getFormActions(): array
    {
        return [
            $this->getSaveFormAction(),
            Actions\EditAction::make()
                ->color(Color::Blue)
                ->label('Checkout')
                ->form([
                    TextInput::make('tax_rate')
                        ->formatStateUsing(fn($state) => $state * 100)
                        ->required(),
                    TextInput::make('fund_rate')
                        ->formatStateUsing(fn($state) => $state * 100)
                        ->required(),
                    TextInput::make('total_amt')
                        ->required(),
                    TextInput::make('posted_amt')
                        ->required(),
                    TextInput::make('buyer_uid'),
                ]),
            $this->getCancelFormAction(),
        ];
    }

    protected function mutateFormDataBeforeFill(array $data): array
    {
        return data_set($data, 'Users', $this->record->Users->pluck('id')->toArray());
    }

    protected function handleRecordUpdate(Model|Item $record, array $data): Model
    {
        $users = $data['Users'];
        unset($data['Users']);
        $record->Users()->sync($users);

        return parent::handleRecordUpdate($record, $data);
    }
}
